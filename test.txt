#include<iostream>
#include<Windows.h>
#include<cstdlib>
#include<conio.h>
#include<ctime>
#include<cstring>
#define maxi 22 //I là hàng
#define maxj 10  //J là c?t

#define rong 4
#define dai 4
//Kho?ng cách l? trái, trên
int board[maxi][maxj];
using namespace std;

enum
{
    BLACK,
    BLUE,
    GREEN,
    CYAN,
    RED,
    PURPLE,
    GRAY,
    WHITE,
    LIGHTGRAY,
    LIGHTBLUE,
    LIGHTGREEN,
    LIGHTCYAN,
    LIGHTRED,
    LIGHTPURPLE,
    LIGHTYELLOW,
    LIGHTWHITE
};
void gotoxy(int x, int y)
{
    COORD c;
    c.X = x - 1;
    c.Y = y - 1;
    SetConsoleCursorPosition (GetStdHandle(STD_OUTPUT_HANDLE), c);
}
void clrscr()
{
    COORD coord;
    DWORD written;
    CONSOLE_SCREEN_BUFFER_INFO info;

    coord.X = 0;
    coord.Y = 0;
    GetConsoleScreenBufferInfo(GetStdHandle(STD_OUTPUT_HANDLE), &info);
    FillConsoleOutputCharacter (GetStdHandle(STD_OUTPUT_HANDLE), ' ',
        info.dwSize.X * info.dwSize.Y, coord, &written);
    gotoxy (1, 1);
}
void textcolor(WORD color)
{
    HANDLE hConsoleOutput;
    hConsoleOutput = GetStdHandle(STD_OUTPUT_HANDLE);

    CONSOLE_SCREEN_BUFFER_INFO screen_buffer_info;
    GetConsoleScreenBufferInfo(hConsoleOutput, &screen_buffer_info);

    WORD wAttributes = screen_buffer_info.wAttributes;
    color &= 0x000f;
    wAttributes &= 0xfff0;
    wAttributes |= color;

    SetConsoleTextAttribute(hConsoleOutput, wAttributes);
}
void SetBGColor(WORD color)
{
    HANDLE hConsoleOutput;
    hConsoleOutput = GetStdHandle(STD_OUTPUT_HANDLE);

    CONSOLE_SCREEN_BUFFER_INFO screen_buffer_info;
    GetConsoleScreenBufferInfo(hConsoleOutput, &screen_buffer_info);

    WORD wAttributes = screen_buffer_info.wAttributes;
    color &= 0x000f;
    color <<= 4;
    wAttributes &= 0xff0f;
    wAttributes |= color;

    SetConsoleTextAttribute(hConsoleOutput, wAttributes);
}
void delay(int x){ Sleep(x);}

void Nocursortype()
{
    CONSOLE_CURSOR_INFO Info;
    Info.bVisible = FALSE;
    Info.dwSize=20;
    SetConsoleCursorInfo (GetStdHandle (STD_OUTPUT_HANDLE), &Info);
}

// tao khung ...

void taobang()
{
    for(int i = rong;i<=rong+10+1;i++)
    {
        for(int j=dai;j<=dai+18+1;j++)
        {
            if((i==rong||i==rong+10+1)&&j>dai&&j<dai+18+1)
            {
                gotoxy(i,j); cout << char(186);
            }
            if((j==dai||j==dai+18+1)&&i>rong&&i<rong+10+1)
            {
                gotoxy(i,j); cout << char(205);
            }
        }
    }
    gotoxy(rong,dai);textcolor(LIGHTYELLOW); cout << char(219);
    gotoxy(rong+10+1,dai);textcolor(LIGHTYELLOW); cout << char(219);
    gotoxy(rong,dai+18+1);textcolor(LIGHTYELLOW); cout << char(219);
    gotoxy(rong+10+1,dai+18+1); textcolor(LIGHTYELLOW);cout << char(219);
}
 //maxi = hang tu tren xuong ;
//maxj = cot tu trai sang;
void trangthaigach()
{
    for(int i=0;i<maxi;i++)

        for(int j=0;j<maxj;j++)
        {
            if(board[i][j]==1&&i>=4)
            {
                gotoxy(j+rong+1,i+dai+1-4);textcolor(LIGHTRED); cout << char(2);
            }
            if(board[i][j]==0&&i>=4)
            {
                 textcolor(BLACK) ;gotoxy(j+rong+1,i+dai+1-4);cout << " ";
            }
        }

}

void capnhatlaitoado(int hang)
{
    for(int i=hang;i>0;i--)

        for(int j=0;j<maxj;j++)
        {
            board[i][j]=board[i-1][j];
        }

}
struct thongtin{
    int score;
    int level;
    float speed;
};
void hienthith (thongtin *th)
{
    th->level = 1;
    th->score= 0;
    th->speed=0.3;
}
int capnhat(thongtin *th , int score)
{
    th->score += score;
    if(th->score>=200&&th->level<2)
    {
        th->level ++;
        th->speed -=0.1;
    }
    return 0;
}
void inthongtin(thongtin th)
{
    textcolor(LIGHTBLUE);
    gotoxy(rong + maxj+3 , 10); cout << "score : "<< th.score;
    gotoxy(rong + maxj+3 , 11); cout << "level : "<< th.level;
    gotoxy(rong + maxj+3 , 12); cout << "speed : "<< th.speed;
}
struct khoigach{
    int **arr;
    int hang , cot;
    int iboard , jboard;
};
khoigach *taokhoigach(int id)
{
    khoigach *pkhoigach = (khoigach*)malloc(sizeof(khoigach));
    switch (id)
    {
    case 15 :
        pkhoigach->hang = 4 ;
        pkhoigach->cot = 1;
        pkhoigach->iboard = 0;
        pkhoigach->jboard = 5;
        break;
    case 31:
        pkhoigach->hang = 2;
        pkhoigach->cot = 2;
        pkhoigach->iboard = 2;
        pkhoigach->jboard = 5;
        break;
    default:
        pkhoigach->hang = 2;
        pkhoigach->cot = 3;
        pkhoigach->iboard = 2;
        pkhoigach->jboard = 5;
    }
    pkhoigach->arr = (int**)malloc(pkhoigach->hang*sizeof(int*));
    for(int i=0;i<pkhoigach->hang;i++)
    {
        pkhoigach->arr[i] = (int*)malloc(pkhoigach->cot*sizeof(int));
    }
    for(int j=0;j<pkhoigach->cot*pkhoigach->hang;j++)
    {
        pkhoigach->arr[j/pkhoigach->cot][j%pkhoigach->cot] = (id>>(pkhoigach->hang*pkhoigach->cot-1-j))&1;
    }
    return pkhoigach;
}
// xet tung o mot xem co the di chuyen duoc hay khong
int thuocbang(int i , int j) // ham kiem tra xem khoi gach co thuoc bang hay ko.
{
    return (i>=0&&i<maxi&&j>=0&&j<maxj);
}
int phai(int i, int j)
{
    if(j<maxj-1&&thuocbang(i,j)&&board[i][j+1]==0) return 1;
    return 0;
}
int trai(int i , int j)
{
    if(j>0&&thuocbang(i,j)&&board[i][j-1]==0) return 1;
    return 0;
}
int xuong(int i , int j)
{
    if(i<maxi-1&&thuocbang(i,j)&&board[i+1][j]==0) return 1;
    return 0;
}
// ham di chyen ca khoi gach.
void sangtrai(khoigach *pkhoigach)
{
    for(int i=0;i<pkhoigach->hang;i++)

        for(int j=0;j<pkhoigach->cot;j++)

            if(pkhoigach->arr[i][j]==1)
            {
                if(trai(pkhoigach->iboard+i,pkhoigach->jboard+j)==0||pkhoigach->iboard <=3) return;
            }


    pkhoigach->jboard-=1;
}
void sangphai(khoigach *pkhoigach)
{
    for(int i=0;i<pkhoigach->hang;i++)

        for(int j=0;j<pkhoigach->cot;j++)

            if(pkhoigach->arr[i][j]==1)
            {
                if(phai(pkhoigach->iboard+i,pkhoigach->jboard+j)==0||pkhoigach->iboard<=3) return;
            }


    pkhoigach->jboard+=1;
}
int xuongduoi(khoigach *pkhoigach)
{
    for(int i=0;i<pkhoigach->hang;i++)

        for(int j=0;j<pkhoigach->cot;j++)

            if(pkhoigach->arr[i][j]==1)
            {
                if(xuong(pkhoigach->iboard+i,pkhoigach->jboard+j)==0) return 0;
            }


    pkhoigach->iboard+=1;
    return 1;
}
void gangiatri(khoigach *pkhoigach)
{
    for(int i=0;i<pkhoigach->hang;i++)

        for(int j=0;j<pkhoigach->cot;j++)

            if(pkhoigach->arr[i][j]==1)
            {
                board[pkhoigach->iboard+i][pkhoigach->jboard+j]=1;
            }


}
void xoaykhoigach(khoigach *pkhoigach)
{
    int **temparr;
    int temphang = pkhoigach->cot;
    int tempcot = pkhoigach->hang;
    // cap phat bo nho cho ma tran phu .
    temparr = (int**)malloc(temphang*sizeof(int*));
    for(int i=0;i<temphang;i++)
    {
        temparr[i] = (int*)malloc(tempcot*sizeof(int));
    }
    // xoay
    for(int i = pkhoigach->hang-1;i>=0;i--)

        for(int j=pkhoigach->cot-1;j>=0;j--)
        {
            temparr[j][pkhoigach->hang-i-1]=pkhoigach->arr[i][j];
        }

    // kiem tra xem co xoay duoc khong
    for(int i=0;i<temphang;i++)
    {
        for(int j=0;j<tempcot;j++)

            if(!thuocbang(pkhoigach->iboard+i,pkhoigach->jboard+j)||board[pkhoigach->iboard+i][pkhoigach->jboard+j]==1)
                return;

    }
    // giai phong bo nho
    for(int i=0;i<pkhoigach->hang;i++)
        free(pkhoigach->arr[i]);
        free(pkhoigach->arr);
    // cap nhat thay doi sau khi xoay
    pkhoigach->hang = temphang;
    pkhoigach->cot = tempcot;
    pkhoigach->arr = temparr;
}
//giai phong bo nho
void huykhoigach(khoigach *pkhoigach)
{
    for(int i=0;i<pkhoigach->hang;i++)
    free(pkhoigach->arr[i]);
    free(pkhoigach->arr);
    free(pkhoigach);
    pkhoigach = NULL;
}
int kiemtra(khoigach *pkhoigach , thongtin * thongtingame)
{
    int dem;
    int i = pkhoigach->hang-1;
    if(pkhoigach->iboard<=3) return -1;
    if(thongtingame->score>=300) return 0;
		do
		{
			dem=0;
			for(int j=0;j<maxj;j++)
			{
				if(board[pkhoigach->iboard+i][j]==1)	dem++;
			}
			if(dem==maxj)
			{
				capnhat(thongtingame,20);
				capnhatlaitoado(pkhoigach->iboard+i);
				trangthaigach();
			}
			else
			{
				i=i-1;
			}
		}while(i>=0);
    return 1;
}
void vekhoigach(khoigach *pkhoigach)
{
    for(int i=0;i<pkhoigach->hang;i++)
    {
        for(int j=0;j<pkhoigach->cot;j++)
        {
            if(pkhoigach->arr[i][j]==1&&(pkhoigach->iboard+i)>3)
            {
                textcolor(LIGHTRED);
                gotoxy(rong+pkhoigach->jboard+j+1 , dai+pkhoigach->iboard+i-3);
                cout << char(2);
            }
        }
    }
}
void xoakhoigach(khoigach *pkhoigach)
{
    for(int i=0;i<pkhoigach->hang;i++)

        for(int j=0;j<pkhoigach->cot;j++)

            if(pkhoigach->arr[i][j]==1&&(pkhoigach->iboard+i)>3)
            {
                textcolor(BLACK);
                gotoxy(rong+pkhoigach->jboard+j+1,dai+pkhoigach->iboard+i-3);
                cout << " ";
            }

}

void venext(int id)
{
    khoigach *pnext = taokhoigach(id);
    int ingoai= rong + maxj + 5 ;
    int jngoai = dai;
    for(int i=0;i<pnext->hang;i++)
    {
        for(int j=0;j<pnext->cot;j++)
        {
            if(pnext->arr[i][j]==1)
            {
                textcolor(LIGHTGREEN);
                gotoxy(ingoai+j , jngoai+i);
                cout << char(2);
            }
        }
    }
    huykhoigach(pnext);
}
void xoanext()
{
    int ingoai = rong + maxj+5;
    int jngoai = dai;
    for(int i=0 ; i<4;i++)
    {
        for(int j=0;j<4;j++)
        {
            textcolor(BLACK);
            gotoxy(ingoai+j , jngoai+i) ;
             cout << " ";
        }
    }
}
// chon ngau nhien 1 vien gsch
int loai()
{
    int x = rand()%7;
    switch(x)
    {
    case 0:
        return 15;
        break;
    case 1:
        return 31;
        break;
    case 2:
        return 51;
        break;
    case 3:
        return 30;
        break;
    case 4:
        return 58;
        break;
    case 5:
        return 57;
        break;
    case 6:
        return 60;
        break;
    }
}

int main(){
    int idkhoigachtieptheo;
    clock_t Start,End;
    char c;
    thongtin th;
    khoigach * cakhoi;
    srand(time(0));
    cakhoi = taokhoigach(loai());
    idkhoigachtieptheo = loai();
    taobang();
    hienthith(&th);
    Nocursortype();
    do
    {
        inthongtin(th);
        vekhoigach(cakhoi);
        xoanext();
        venext(idkhoigachtieptheo);
        Start=clock();
        do
        {
        if(_kbhit())
        {
            c=toupper(getch());
            xoakhoigach(cakhoi);
            switch(c)
            {
                case 72:
                    xoaykhoigach(cakhoi);
                    break;
                case 75:
                    sangtrai(cakhoi);
                    break;
                case 77:
                    sangphai(cakhoi);
                case 80:
                    xuongduoi(cakhoi);
                    break;
            }
            vekhoigach(cakhoi);
        }
        End=clock();
        }while(float(End-Start)/CLK_TCK<th.speed);
        xoakhoigach(cakhoi);
        if(xuongduoi(cakhoi)==0)
        {
            gangiatri(cakhoi);
            int ketqua = kiemtra(cakhoi, &th);
            if((ketqua==-1||ketqua==0)) break;
            huykhoigach(cakhoi);
            cakhoi = taokhoigach(idkhoigachtieptheo);
            idkhoigachtieptheo = loai();
        }
        trangthaigach();
    }while(1);
        textcolor(LIGHTGREEN);
        gotoxy(35,20) ; cout << "end game";
        _getch();
        return 0;

}
  
